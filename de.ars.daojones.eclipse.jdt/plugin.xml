<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension-point id="beansproblemdetectors" name="Problem Detectors for DaoJones Beans" schema="schema/beans.problemdetectors.exsd"/>
   <extension
         point="org.eclipse.core.expressions.definitions">
      <definition
            id="de.ars.daojones.eclipse.jdt.definitions.nature.enabled">
         <or>
            <adapt
                  type="org.eclipse.core.resources.IProject">
               <test
                     property="org.eclipse.core.resources.projectNature"
                     value="de.ars.daojones.eclipse.jdt.nature">
               </test>
            </adapt>
            <and>
               <instanceof
                     value="org.eclipse.core.resources.IProject">
               </instanceof>
               <test
                     property="org.eclipse.core.resources.projectNature"
                     value="de.ars.daojones.eclipse.jdt.nature">
               </test>
            </and>
         </or>
      </definition>
      <definition
            id="org.eclipse.jdt.core.definitions.nature.enabled">
         <or>
            <instanceof
                  value="org.eclipse.jdt.core.IJavaProject">
            </instanceof>
            <and>
               <adapt
                     type="org.eclipse.core.resources.IProject">
                  <test
                        property="org.eclipse.core.resources.projectNature"
                        value="org.eclipse.jdt.core.javanature">
                  </test>
               </adapt>
            </and>
         </or>
      </definition>
      </extension>
   <extension
         id="de.ars.daojones.eclipse.jdt.markers.unimplementedMethodInConcreteBean"
         name="Abstract Method In Non-Abstract Bean Marker"
         point="org.eclipse.core.resources.markers">
      <persistent
            value="true">
      </persistent>
      <super
            type="org.eclipse.jdt.core.problem">
      </super>
   </extension>
    <extension
         point="de.ars.daojones.eclipse.jdt.beansproblemdetectors">
      <problemdetector
            class="de.ars.daojones.eclipse.jdt.beans.UnimplementedMethodInConcreteBeanDetector">
      </problemdetector>
      <problemdetector
            class="de.ars.daojones.eclipse.jdt.beans.DoubledAnnotatedMethodsDetector">
      </problemdetector>
      <problemdetector
            class="de.ars.daojones.eclipse.jdt.beans.AnnotationAtInvalidPositionDetector">
      </problemdetector>
   </extension>
   <extension
         id="de.ars.daojones.eclipse.jdt.markers.doubledAnnotatedMethod"
         name="Double Annotation Marker"
         point="org.eclipse.core.resources.markers">
      <persistent
            value="true">
      </persistent>
      <super
            type="org.eclipse.jdt.core.problem">
      </super>
   </extension>
   <extension
         id="de.ars.daojones.eclipse.jdt.markers.nonAbstractMethodMarker"
         name="Non-Abstract Method Marker"
         point="org.eclipse.core.resources.markers">
      <persistent
            value="true">
      </persistent>
      <super
            type="org.eclipse.jdt.core.problem">
      </super>
   </extension>
   <extension
         id="de.ars.daojones.eclipse.jdt.markers.invalidGetterSetterFormatMarker"
         name="Invalid Method Format Marker"
         point="org.eclipse.core.resources.markers">
      <persistent
            value="true">
      </persistent>
      <super
            type="org.eclipse.jdt.core.problem">
      </super>
   </extension>
   <extension
         id="de.ars.daojones.eclipse.jdt.markers.invalidTypeHierarchyMarker"
         name="Invalid Method Format Marker"
         point="org.eclipse.core.resources.markers">
      <persistent
            value="true">
      </persistent>
      <super
            type="org.eclipse.jdt.core.problem">
      </super>
   </extension>
   <extension
         point="org.eclipse.jdt.core.classpathVariableInitializer">
      <classpathVariableInitializer
            class="de.ars.daojones.eclipse.jdt.internal.libraries.ClasspathVariableInitializer"
            readOnly="true"
            variable="DAOJONES_RUNTIME">
      </classpathVariableInitializer>
<!--
      <classpathVariableInitializer
            class="de.ars.daojones.eclipse.jdt.ClasspathVariableInitializer"
            readOnly="true"
            variable="DAOJONES_SDK">
      </classpathVariableInitializer>
-->
   </extension>
   <extension
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="de.ars.daojones.eclipse.jdt.preferences.PreferencesInitializer">
      </initializer>
   </extension>
<extension
         id="BeanBuilder"
         name="DaoJones Bean Builder"
         point="org.eclipse.core.resources.builders">
      <builder
            callOnEmptyDelta="false"
            hasNature="true"
            isConfigurable="false">
         <run
               class="de.ars.daojones.eclipse.jdt.beans.BeanBuilder">
         </run>
      </builder>
   </extension>
   <extension
         id="nature"
         name="DaoJones JDT Nature"
         point="org.eclipse.core.resources.natures">
      <runtime>
         <run
               class="de.ars.daojones.eclipse.jdt.ProjectNature">
         </run>
      </runtime>
      <builder
            id="de.ars.daojones.eclipse.jdt.BeanBuilder">
      </builder>
      <requires-nature
            id="org.eclipse.jdt.core.javanature">
      </requires-nature>
      <requires-nature
            id="de.ars.daojones.eclipse.resources.nature">
      </requires-nature>
   </extension>
   <extension
         point="org.eclipse.jdt.core.classpathContainerInitializer">
      <classpathContainerInitializer
            class="de.ars.daojones.eclipse.jdt.internal.libraries.ClasspathContainers"
            id="de.ars.daojones.eclipse.jdt.LIBRARY">
      </classpathContainerInitializer>
   </extension>
</plugin>
