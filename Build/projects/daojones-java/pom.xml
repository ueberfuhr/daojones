<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>daojones-java</artifactId>
  <name>Parent POM for DaoJones Java Projects</name>
  <packaging>pom</packaging>
  <parent>
    <groupId>de.ars.daojones</groupId>
    <artifactId>daojones-project</artifactId>
    <version>2.0.0-SNAPSHOT</version>
  </parent>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <version>1.3</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>1.9.5</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.core</artifactId>
        <version>${osgi.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.compendium</artifactId>
        <version>${osgi.version}</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins </groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.5</version>
          <configuration>
            <useDefaultManifestFile>true</useDefaultManifestFile>
            <archive>
              <addMavenDescriptor>false</addMavenDescriptor>
              <manifest>
                <addClasspath>true</addClasspath>
                <!-- Important to read the version of DaoJones -->
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
              <manifestEntries>
                <Built-By>${user.name}</Built-By>
                <Build-Jdk>${java.version}</Build-Jdk>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2.1</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>verify</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.8</version>
          <executions>
            <execution>
              <id>copy-dependencies</id>
              <phase>package</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                <overWriteReleases>false</overWriteReleases>
                <overWriteSnapshots>false</overWriteSnapshots>
                <overWriteIfNewer>true</overWriteIfNewer>
                <includeScope>runtime</includeScope>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings 
          only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.3,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-dependency-plugin
                    </artifactId>
                    <versionRange>
                      [2.1,)
                    </versionRange>
                    <goals>
                      <goal>
                        copy-dependencies
                      </goal>
                      <goal>
                        unpack
                      </goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.codehaus.mojo
                    </groupId>
                    <artifactId>
                      build-helper-maven-plugin
                    </artifactId>
                    <versionRange>
                      [1.9.1,)
                    </versionRange>
                    <goals>
                      <goal>add-source</goal>
                      <goal>add-resource</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.felix
                    </groupId>
                    <artifactId>
                      maven-bundle-plugin
                    </artifactId>
                    <versionRange>
                      [2.4.0,)
                    </versionRange>
                    <goals>
                      <goal>manifest</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!-- Create filter properties for manifest modification of maven-jar-plugin 
        (if useDefaultManifestFile is set to true) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <!-- Safety -->
                <mkdir dir="${project.build.directory}" />
                <echo file="${project.build.directory}/filter.properties"
                  message="build.time=${build.time}${line.separator}buildNumber=${buildNumber}" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <!-- This profile executes code coverage -->
      <id>code-coverage</id>
      <activation>
        <property>
          <name>!coverage.skip</name>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>2.15</version>
              <configuration>
                <!-- Sets the VM argument line used when unit tests are run. -->
                <argLine>${surefireArgLine}</argLine>
              </configuration>
            </plugin>
            <!-- see http://www.petrikainulainen.net/programming/maven/creating-code-coverage-reports-for-unit-and-integration-tests-with-the-jacoco-maven-plugin/ -->
            <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <version>0.6.2.201302030002</version>
              <executions>
                <!-- Prepares the property pointing to the JaCoCo runtime 
                  agent which is passed as VM argument when Maven the Surefire plugin is executed. -->
                <execution>
                  <id>pre-unit-test</id>
                  <goals>
                    <goal>prepare-agent</goal>
                  </goals>
                  <configuration>
                    <!-- Sets the path to the file which contains the execution 
                      data. -->
                    <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                    <!-- Sets the name of the property containing the settings 
                      for JaCoCo runtime agent. -->
                    <propertyName>surefireArgLine</propertyName>
                  </configuration>
                </execution>
                <!-- Ensures that the code coverage report for unit tests 
                  is created after unit tests have been run. -->
                <execution>
                  <id>post-unit-test</id>
                  <phase>test</phase>
                  <goals>
                    <goal>report</goal>
                  </goals>
                  <configuration>
                    <!-- Sets the path to the file which contains the execution 
                      data. -->
                    <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                    <!-- Sets the output directory for the code coverage 
                      report. -->
                    <outputDirectory>${project.build.directory}/coverage-reports/jacoco-ut</outputDirectory>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <!--This plugin's configuration is used to store Eclipse m2e 
              settings only. It has no influence on the Maven build itself. -->
            <plugin>
              <groupId>org.eclipse.m2e</groupId>
              <artifactId>lifecycle-mapping</artifactId>
              <version>1.0.0</version>
              <configuration>
                <lifecycleMappingMetadata>
                  <pluginExecutions>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <versionRange>[0.6.2.201302030002,)</versionRange>
                        <goals>
                          <goal>prepare-agent</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore></ignore>
                      </action>
                    </pluginExecution>
                  </pluginExecutions>
                </lifecycleMappingMetadata>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- This profile executes code analysis -->
      <id>code-analysis</id>
      <activation>
        <property>
          <name>!analysis.skip</name>
        </property>
      </activation>
      <properties>
        <!-- Default values, can be overwritten by the Jenkins build definition -->
        <analysis.skip.checkstyle>false</analysis.skip.checkstyle>
        <analysis.skip.pmd>false</analysis.skip.pmd>
        <analysis.skip.findbugs>false</analysis.skip.findbugs>
        <analysis.failOnError>false</analysis.failOnError>
        <analysis.rules.checkstyle>config/sun_checks.xml</analysis.rules.checkstyle>
        <analysis.rules.pmd>rulesets/maven.xml</analysis.rules.pmd>
        <analysis.results.findbugs>${project.build.directory}/analysis/findbugs</analysis.results.findbugs>
        <analysis.results.checkstyle>${project.build.directory}/analysis/checkstyle</analysis.results.checkstyle>
        <analysis.results.pmd>${project.build.directory}/analysis/pmd</analysis.results.pmd>
        <analysis.failOnError>false</analysis.failOnError>
        <findbugs.fork>false</findbugs.fork>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>findbugs-maven-plugin</artifactId>
              <version>2.5.2</version>
              <configuration>
                <xmlOutput>true</xmlOutput>
                <xmlOutputDirectory>${analysis.results.findbugs}</xmlOutputDirectory>
                <findbugsXmlOutputDirectory>${analysis.results.findbugs}</findbugsXmlOutputDirectory>
                <failOnError>${analysis.failOnError}</failOnError>
                <fork>${findbugs.fork}</fork>
                <skip>${analysis.skip.findbugs}</skip>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-checkstyle-plugin</artifactId>
              <version>2.10</version>
              <dependencies>
                <dependency>
                  <groupId>de.ars.daojones</groupId>
                  <artifactId>checkstyle-configuration</artifactId>
                  <version>1.0.0-SNAPSHOT</version>
                </dependency>
              </dependencies>
              <configuration>
                <configLocation>ars/checkstyle/checkstyle_checks.xml</configLocation>
                <!-- <suppressionsLocation>ars/checkstyle/suppressions.xml</suppressionsLocation> 
                  <configLocation>${analysis.rules.checkstyle}</configLocation> -->
                <outputFile>${analysis.results.checkstyle}/checkstyle-result.xml</outputFile>
                <failOnViolation>${analysis.failOnError}</failOnViolation>
                <!-- Replace by build job property checkstyle.properties.location 
                  to specify a properties file for this! -->
                <propertyExpansion>
                  translation.severity=${checkstyle.translation.severity}
                  checkstyle.importcontrol.file=${checkstyle.importcontrol.file}
                  checkstyle.suppressions.file=/ars/checkstyle/suppressions.xml
                </propertyExpansion>
                <skip>${analysis.skip.checkstyle}</skip>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-pmd-plugin</artifactId>
              <version>3.0.1</version>
              <dependencies>
                <dependency>
                  <groupId>de.ars.daojones</groupId>
                  <artifactId>pmd-configuration</artifactId>
                  <version>1.0.0-SNAPSHOT</version>
                </dependency>
              </dependencies>
              <configuration>
                <rulesets>
                  <!-- <ruleset>${analysis.rules.pmd}</ruleset> -->
                  <ruleset>ars/pmd/pmd-ars-ruleset.xml</ruleset>
                </rulesets>
                <failurePriority>2</failurePriority>
                <minimumPriority>2</minimumPriority>
                <targetDirectory>${analysis.results.pmd}</targetDirectory>
                <failOnViolation>${analysis.failOnError}</failOnViolation>
                <linkXref>false</linkXref>
                <skip>${analysis.skip.pmd}</skip>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <executions>
              <execution>
                <!-- Check after registering all source folders, compiling, 
                  unit testing -->
                <phase>prepare-package</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <executions>
              <execution>
                <!-- Check after registering all source folders, compiling, 
                  unit testing -->
                <phase>prepare-package</phase>
                <!-- Default phase is verify (after packaging) ?! -->
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- This profile creates OSGi meta information -->
      <id>osgi</id>
      <activation>
        <property>
          <name>!osgi.skip</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.osgi</groupId>
          <artifactId>org.osgi.core</artifactId>
        </dependency>
        <dependency>
          <groupId>org.osgi</groupId>
          <artifactId>org.osgi.compendium</artifactId>
        </dependency>
      </dependencies>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-source-plugin</artifactId>
              <configuration>
                <archive>
                  <manifestEntries>
                    <Eclipse-SourceBundle>${bundle.symbolicname};version="${bundle.version}"</Eclipse-SourceBundle>
                    <Bundle-SymbolicName>${bundle.symbolicname}.source</Bundle-SymbolicName>
                    <Bundle-Name>${bundle.name} (Source)</Bundle-Name>
                    <Bundle-Version>${bundle.version}</Bundle-Version>
                    <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                    <Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
                    <Bundle-DocURL>${bundle.docurl}</Bundle-DocURL>
                  </manifestEntries>
                </archive>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-source-osgi</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/main/osgi/java</source>
                  </sources>
                </configuration>
              </execution>
              <execution>
                <id>add-resource-osgi</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>add-resource</goal>
                </goals>
                <configuration>
                  <resources>
                    <resource>
                      <directory>src/main/osgi/resources</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <version>2.4.0</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>bundle-manifest</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>manifest</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <instructions>
                <Bundle-SymbolicName>${bundle.symbolicname}</Bundle-SymbolicName>
                <Bundle-Name>${bundle.name}</Bundle-Name>
                <Bundle-Version>${bundle.version}</Bundle-Version>
                <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                <Bundle-Description>${bundle.description}</Bundle-Description>
                <Bundle-Vendor>${bundle.vendor}</Bundle-Vendor>
                <Bundle-DocURL>${bundle.docurl}</Bundle-DocURL>
                <!-- Must be named within filter.properties -->
                <Build-Number>${buildNumber}</Build-Number>
                <Built-Time>${build.time}</Built-Time>
                <!-- Provider Bundles could use the Serviceloader for extensions -->
                <!-- recommended only for static extensions: -->
                <!-- Factory Models, BeanModelNormalizer, ConnectionModelNormalizer, 
                  CommandExecutor -->
                <!-- (since OSGi R5 Enterprise) -->
                <!-- <Require-Capability>osgi.extender;filter:="(osgi.extender=osgi.serviceloader.processor)",osgi.serviceloader;filter:="(osgi.serviceloader=foo.bar.MySPI)";cardinality:=multiple</Require-Capability> -->
              </instructions>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <properties>
        <!-- Can be overwritten by child poms -->
        <bundle.symbolicname>${project.groupId}.${project.artifactId}</bundle.symbolicname>
        <bundle.name>${project.name}</bundle.name>
        <bundle.description>${project.description}</bundle.description>
        <bundle.vendor>${project.organization.name}</bundle.vendor>
        <bundle.docurl>${project.organization.url}</bundle.docurl>
        <!-- BND Tools will replace the "-" to "." automatically, but they 
          are not used everywhere! -->
        <bundle.version>2.0.0.SNAPSHOT</bundle.version>
        <osgi.version>5.0.0</osgi.version>
      </properties>
    </profile>
    <profile>
      <id>no-osgi</id>
      <activation>
        <property>
          <name>osgi.skip</name>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins </groupId>
              <artifactId>maven-jar-plugin</artifactId>
              <configuration>
                <useDefaultManifestFile>false</useDefaultManifestFile>
                <archive>
                  <manifestEntries>
                    <!-- Must be named within filter.properties -->
                    <Build-Number>${buildNumber}</Build-Number>
                    <Built-Time>${build.time}</Built-Time>
                  </manifestEntries>
                </archive>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
